// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'token_config.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

TokenConfig _$TokenConfigFromJson(Map<String, dynamic> json) => TokenConfig(
      allowlistAccount: json['allowlist_account'],
      authorCurveExponent: (json['author_curve_exponent'] as num).toDouble(),
      authorRewardPercentage:
          (json['author_reward_percentage'] as num).toDouble(),
      badgeFee: (json['badge_fee'] as num).toDouble(),
      beneficiariesAccount: json['beneficiaries_account'] as String,
      beneficiariesRewardPercentage:
          (json['beneficiaries_reward_percentage'] as num).toDouble(),
      cashoutWindowDays: (json['cashout_window_days'] as num).toDouble(),
      curationCurveExponent:
          (json['curation_curve_exponent'] as num).toDouble(),
      disableDownvoting: json['disable_downvoting'] as bool,
      downvotePowerConsumption: json['downvote_power_consumption'] as int,
      downvoteRegenerationSeconds: json['downvote_regeneration_seconds'] as int,
      downvoteWindowDays: json['downvote_window_days'] as int,
      enableAccountAllowlist: json['enable_account_allowlist'],
      enableAccountMuting: json['enable_account_muting'] as bool,
      enableCommentBeneficiaries: json['enable_comment_beneficiaries'] as bool,
      excludeApps: json['exclude_apps'],
      excludeAppsFromTokenBeneficiary:
          json['exclude_apps_from_token_beneficiary'] as String,
      excludeBeneficiariesAccounts:
          json['exclude_beneficiaries_accounts'] as String,
      excludeTags: json['exclude_tags'] as String,
      feePostAccount: json['fee_post_account'],
      feePostAmount: json['fee_post_amount'] as int,
      feePostExemptBeneficiaryAccount:
          json['fee_post_exempt_beneficiary_account'],
      feePostExemptBeneficiaryWeight:
          json['fee_post_exempt_beneficiary_weight'] as int,
      hiveCommunity: json['hive_community'] as String,
      hiveEnabled: json['hive_enabled'] as bool,
      hiveEngineEnabled: json['hive_engine_enabled'] as bool,
      issueToken: json['issue_token'] as bool,
      jsonMetadataAppValue: json['json_metadata_app_value'],
      jsonMetadataKey: json['json_metadata_key'] as String,
      jsonMetadataValue: json['json_metadata_value'] as String,
      maxAutoClaimAmount: (json['max_auto_claim_amount'] as num).toDouble(),
      minerTokens: json['miner_tokens'] as String,
      miningPoolClaimNumber: json['mining_pool_claim_number'] as int,
      miningPoolClaimsPerYear: json['mining_pool_claims_per_year'] as int,
      mutingAccount: json['muting_account'] as String,
      nDailyPostsMutedAccounts: json['n_daily_posts_muted_accounts'] as int,
      otherPoolAccounts: json['other_pool_accounts'] as String,
      otherPoolPercentage: (json['other_pool_percentage'] as num).toDouble(),
      otherPoolSendTokenPerYear: json['other_pool_send_token_per_year'] as int,
      pobCommentPoolPercentage:
          (json['pob_comment_pool_percentage'] as num).toDouble(),
      pobPoolPercentage: (json['pob_pool_percentage'] as num).toDouble(),
      posmPoolPercentage: (json['posm_pool_percentage'] as num).toDouble(),
      postRewardCurve: json['post_reward_curve'] as String,
      postRewardCurveParameter: json['post_reward_curve_parameter'],
      promotedPostAccount: json['promoted_post_account'] as String,
      reductionEveryNBlock: json['reduction_every_n_block'] as int,
      reductionPercentage: (json['reduction_percentage'] as num).toDouble(),
      rewardsToken: (json['rewards_token'] as num).toDouble(),
      rewardsTokenEveryNBlock: json['rewards_token_every_n_block'] as int,
      stakedRewardPercentage:
          (json['staked_reward_percentage'] as num).toDouble(),
      stakingPoolClaimNumber: json['staking_pool_claim_number'] as int,
      stakingPoolClaimsPerYear: json['staking_pool_claims_per_year'] as int,
      stakingPoolPercentage:
          (json['staking_pool_percentage'] as num).toDouble(),
      steemEnabled: json['steem_enabled'] as bool,
      steemEngineEnabled: json['steem_engine_enabled'] as bool,
      tagAddingWindowHours: (json['tag_adding_window_hours'] as num).toDouble(),
      token: json['token'] as String,
      tokenAccount: json['token_account'] as String,
      useStakingCirculatingQuotent:
          json['use_staking_circulating_quotent'] as bool,
      votePowerConsumption: json['vote_power_consumption'] as int,
      voteRegenerationSeconds: json['vote_regeneration_seconds'] as int,
      voteWindowDays: json['vote_window_days'] as int,
    );

Map<String, dynamic> _$TokenConfigToJson(TokenConfig instance) =>
    <String, dynamic>{
      'allowlist_account': instance.allowlistAccount,
      'author_curve_exponent': instance.authorCurveExponent,
      'author_reward_percentage': instance.authorRewardPercentage,
      'badge_fee': instance.badgeFee,
      'beneficiaries_account': instance.beneficiariesAccount,
      'beneficiaries_reward_percentage': instance.beneficiariesRewardPercentage,
      'cashout_window_days': instance.cashoutWindowDays,
      'curation_curve_exponent': instance.curationCurveExponent,
      'disable_downvoting': instance.disableDownvoting,
      'downvote_power_consumption': instance.downvotePowerConsumption,
      'downvote_regeneration_seconds': instance.downvoteRegenerationSeconds,
      'downvote_window_days': instance.downvoteWindowDays,
      'enable_account_allowlist': instance.enableAccountAllowlist,
      'enable_account_muting': instance.enableAccountMuting,
      'enable_comment_beneficiaries': instance.enableCommentBeneficiaries,
      'exclude_apps': instance.excludeApps,
      'exclude_apps_from_token_beneficiary':
          instance.excludeAppsFromTokenBeneficiary,
      'exclude_beneficiaries_accounts': instance.excludeBeneficiariesAccounts,
      'exclude_tags': instance.excludeTags,
      'fee_post_account': instance.feePostAccount,
      'fee_post_amount': instance.feePostAmount,
      'fee_post_exempt_beneficiary_account':
          instance.feePostExemptBeneficiaryAccount,
      'fee_post_exempt_beneficiary_weight':
          instance.feePostExemptBeneficiaryWeight,
      'hive_community': instance.hiveCommunity,
      'hive_enabled': instance.hiveEnabled,
      'hive_engine_enabled': instance.hiveEngineEnabled,
      'issue_token': instance.issueToken,
      'json_metadata_app_value': instance.jsonMetadataAppValue,
      'json_metadata_key': instance.jsonMetadataKey,
      'json_metadata_value': instance.jsonMetadataValue,
      'max_auto_claim_amount': instance.maxAutoClaimAmount,
      'miner_tokens': instance.minerTokens,
      'mining_pool_claim_number': instance.miningPoolClaimNumber,
      'mining_pool_claims_per_year': instance.miningPoolClaimsPerYear,
      'muting_account': instance.mutingAccount,
      'n_daily_posts_muted_accounts': instance.nDailyPostsMutedAccounts,
      'other_pool_accounts': instance.otherPoolAccounts,
      'other_pool_percentage': instance.otherPoolPercentage,
      'other_pool_send_token_per_year': instance.otherPoolSendTokenPerYear,
      'pob_comment_pool_percentage': instance.pobCommentPoolPercentage,
      'pob_pool_percentage': instance.pobPoolPercentage,
      'posm_pool_percentage': instance.posmPoolPercentage,
      'post_reward_curve': instance.postRewardCurve,
      'post_reward_curve_parameter': instance.postRewardCurveParameter,
      'promoted_post_account': instance.promotedPostAccount,
      'reduction_every_n_block': instance.reductionEveryNBlock,
      'reduction_percentage': instance.reductionPercentage,
      'rewards_token': instance.rewardsToken,
      'rewards_token_every_n_block': instance.rewardsTokenEveryNBlock,
      'staked_reward_percentage': instance.stakedRewardPercentage,
      'staking_pool_claim_number': instance.stakingPoolClaimNumber,
      'staking_pool_claims_per_year': instance.stakingPoolClaimsPerYear,
      'staking_pool_percentage': instance.stakingPoolPercentage,
      'steem_enabled': instance.steemEnabled,
      'steem_engine_enabled': instance.steemEngineEnabled,
      'tag_adding_window_hours': instance.tagAddingWindowHours,
      'token': instance.token,
      'token_account': instance.tokenAccount,
      'use_staking_circulating_quotent': instance.useStakingCirculatingQuotent,
      'vote_power_consumption': instance.votePowerConsumption,
      'vote_regeneration_seconds': instance.voteRegenerationSeconds,
      'vote_window_days': instance.voteWindowDays,
    };
